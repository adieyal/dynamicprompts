[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "dynamicprompts"
version = "0.10.6"
description = "Dynamic prompts templating library for Stable Diffusion"
homepage = "https://github.com/adieyal/dynamicprompts"
authors = ["Adi Eyal <adi@clearforest.io>"]
license = "MIT"
readme = "README.md"
keywords = ["stable diffusion", "prompt engineering", "automatic1111", "text2img"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Topic :: Text Processing"
]

[tool.poetry.dependencies]
python = "^3.7"
pyparsing = "^3.0.9"
requests = "^2.28.1"
tqdm = "^4.64.1"
spacy = { version = "^3.4.4", optional = true }
transformers = { version = ">=4.19.2", extras = ["torch"] }
jinja2 = "^3.1.2"

[tool.poetry.group.dev.dependencies]
pytest = "^7.2.0"
black = "^22.12.0"
pytest-lazy-fixture = "^0.6.3"

[tool.poetry.extras]
attentiongrabber = ["spacy"]
magicprompt = ["transformers", "torch", "torchvision"]

[tool.pytest.ini_options]
pythonpath = ["src"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
]

[tool.ruff]
target-version = "py37"
select = [
    "B",
    "C",
    "COM",
    "E",
    "F",
    "I",
    "UP",
    "TID252",
    "T2",
]
ignore = [
    "B007",
    "B905",
    "C901", # Complexity
    "E501", # Line length
]
unfixable = [
    "T2",  # don't automatically remove prints
    "F841",  # don't remove seemingly unused locals
]

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.mypy]
exclude = "tests"

[[tool.mypy.overrides]]
module = "transformers"
ignore_missing_imports = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
    "if __name__ == .__main__.:",
]
